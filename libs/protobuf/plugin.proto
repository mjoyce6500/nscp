syntax = "proto3";

package PB.Commands;

//option optimize_for = CODE_SIZE;

import "common.proto";
import "registry.proto";

//
// Common utility types (re-used in various messages below)
//

//
// Query request
// Used for querying the client this is the "normal" check_nrpe message request.
// Associated response is :py:class:`Plugin.QueryResponseMessage`
//
message QueryRequestMessage {
	message Request {
		int32 id = 1;
		string target = 7;
		string command = 2;
		string alias = 3;
		repeated string arguments = 4;
	};

	PB.Common.Header header = 1;
	repeated Request payload = 2;
}

//
// Query response
// Used for querying the client this is the "normal" check_nrpe message request.
// Associated request is `[QueryRequestMessage](#.Plugin.QueryRequestMessage)`
//
message QueryResponseMessage {

	message Response {
		message Line {
			string message = 1;
			repeated PB.Common.PerformanceData perf = 2;
		}

		int32 id = 1;
		string source = 7;
		string command = 2;
		string alias = 3;
		repeated string arguments = 16;

		PB.Common.ResultCode result = 4;
		repeated Line lines = 9;

		bytes data = 5;

	}

	PB.Common.Header header = 1;
	repeated Response payload = 2;
}

//
// Execute command request and response.
// Used for executing commands on clients similar to :py:class:`Plugin.QueryRequestMessage` but wont return Nagios check data
// Associated response is :py:class:`Plugin.ExecuteResponseMessage`
//
message ExecuteRequestMessage {
	message Request {
		int32 id = 1;
		string command = 2;
		repeated string arguments = 3;
	};

	PB.Common.Header header = 1;
	repeated Request payload = 2;
}
message ExecuteResponseMessage {
	message Response {
		int32 id = 2;
		string command = 5;
		repeated string arguments = 16;

		PB.Common.ResultCode result = 9;
		string message = 10;
		bytes data = 7;
	}
	PB.Common.Header header = 1;
	repeated Response payload = 2;
}

//
// Submit result request message.
// Used for submitting a passive check results.
// The actual payload (Request) is a normal :py:class:`Plugin.QueryResponseMessage.Response`.
// Associated response is :py:class:`Plugin.SubmitResponseMessage`
//
message SubmitRequestMessage {
	// The header
	PB.Common.Header header = 1;
	string channel = 2;
	repeated QueryResponseMessage.Response payload = 3;
}

//
// Submit result response message.
// Response from submitting a passive check results.
// Associated request is :py:class:`Plugin.SubmitRequestMessage`
//
message SubmitResponseMessage {
	message Response {
		int32 id = 1;
		string command = 2;
		PB.Common.Result result = 3;
	};
	PB.Common.Header header = 1;
	repeated Response payload = 2;
}

//
// Execute command request and response.
// Used for executing commands on clients similar to :py:class:`Plugin.QueryRequestMessage` but wont return Nagios check data
// Associated response is :py:class:`Plugin.ExecuteResponseMessage`
//
message EventMessage {
	message Request {
		string event = 1;
		repeated string arguments = 2;
		repeated PB.Common.KeyValue data = 3;
	};

	PB.Common.Header header = 1;
	repeated Request payload = 2;
}

//
// Schedule Notification commands
// Used when a schedule is executed
//
message ScheduleNotificationMessage {

	// A request message of a schule notification
	message Request {
		int64 id = 1;
		int32 plugin_id = 3;

		PB.Registry.Information info = 4;

		PB.Registry.Schedule schedule = 20;
	};
	PB.Common.Header header = 1;
	repeated Request payload = 2;
};

