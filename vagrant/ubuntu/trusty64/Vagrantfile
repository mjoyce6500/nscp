# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = "ubuntu/trusty64"
  config.vm.hostname = "trusty64.build.nscp.org"


  config.vm.provider :virtualbox do |vb|
    vb.gui = false
    vb.customize ["modifyvm", :id, "--memory", "2048"]
  end

  config.vm.provision "shell", inline: "sudo apt-get update -y"
  config.vm.provision "shell", inline: "sudo apt-get install -y git build-essential debhelper cmake"
  config.vm.provision "shell", inline: "sudo apt-get install -y python-dev libssl-dev libboost-all-dev libprotobuf-dev libcrypto++-dev libgtest-dev liblua5.1-0-dev"
  config.vm.provision "shell", inline: "sudo apt-get install -y protobuf-compiler python-protobuf"
  config.vm.provision "shell", inline: "sudo apt-get install -y python-sphinx"
  config.vm.provision "shell", inline: "test -f /usr/lib/python2.7/dist-packages/google/protobuf/compiler/__init__.py || sudo touch /usr/lib/python2.7/dist-packages/google/protobuf/compiler/__init__.py"

  # Provision build script
  config.vm.provision "shell", inline: "cp /etc/puppet/files/build-debian.sh /home/vagrant/build-debian.sh"
  config.vm.provision "shell", inline: "chmod 755 /home/vagrant/build-debian.sh"
  # Build NSClient++
  config.vm.provision "shell", inline: "su - vagrant -c ./build-debian.sh"

  config.vm.synced_folder "../../files", "/etc/puppet/files"
  config.vm.synced_folder "../../../", "/source/nscp"
  config.ssh.forward_agent = true
  config.ssh.private_key_path = ['~/.vagrant.d/insecure_private_key', '~/.ssh/id_rsa']
  config.ssh.insert_key = false
  
end
